celery -A istak_backend worker -l info -P solo 
//C:\Program Files>.\redis-cli.exe ping //RUN ON SHELL ADMIN PERMIN ON,
#run this inorder for notification function to run.

celery -A istak_backend worker -l info -P solo 
celery -A istak_backend beat -l info
python manage.py runserver 0.0.0.0:8000



DATABASE QUERYY CODE

#item by transaction
SELECT
  i.item_name                         AS item_name,
  t.id                                AS transaction_id,
  b.name                              AS borrower_name,
  t.return_date,
  t.borrow_date
FROM istak_backend_transaction            AS t
JOIN istak_backend_borrower               AS b  ON b.id = t.borrower_id
JOIN istak_backend_transaction_items      AS ti ON ti.transaction_id = t.id
JOIN istak_backend_item                   AS i  ON i.id = ti.item_id
ORDER BY i.item_name ASC, t.borrow_date DESC, t.id;

#by borrower
SELECT DISTINCT ON (b.id)
  b.name AS borrower_name,
  b.school_id,
  COALESCE(t.id::text, 'N/A')        AS transaction_id,
  COALESCE(t.borrow_date::text, 'N/A') AS last_borrow_date
FROM istak_backend_borrower b
LEFT JOIN istak_backend_transaction t
  ON t.borrower_id = b.id
ORDER BY b.id, t.borrow_date DESC, t.id DESC;

#orgs user
SELECT
  u.username,
  u.email,
  COUNT(i.id) AS total_items
FROM istak_backend_customuser AS u
LEFT JOIN istak_backend_item AS i
  ON i.manager_id = u.id
WHERE u.role = 'user_web'
GROUP BY u.id, u.username, u.email
ORDER BY u.username;

#DELETE ALL IN TABLE
BEGIN;

TRUNCATE TABLE
  istak_backend_transaction_items,  -- M2M join table
  istak_backend_transaction,
  istak_backend_item,
  istak_backend_borrower
RESTART IDENTITY CASCADE;

COMMIT;
